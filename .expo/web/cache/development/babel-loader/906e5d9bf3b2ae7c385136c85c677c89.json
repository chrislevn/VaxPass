{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/hongloc/Documents/GitHub/Covid_pass/screens/Provider/DashboardProvider.js\";\n\nimport React, { Component, useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport RNPickerSelect from 'react-native-picker-select';\n\nvar DropdownProvider = function DropdownProvider() {\n  return React.createElement(RNPickerSelect, {\n    onValueChange: function onValueChange(value) {\n      return console.log(value);\n    },\n    items: [{\n      label: 'Moderna',\n      value: 'Moderna'\n    }, {\n      label: 'Pifzer',\n      value: 'Pifzer'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  });\n};\n\nvar DropdownDose = function DropdownDose() {\n  return React.createElement(RNPickerSelect, {\n    onValueChange: function onValueChange(value) {\n      return console.log(value);\n    },\n    items: [{\n      label: '1st',\n      value: '1st'\n    }, {\n      label: '2nd',\n      value: '2nd'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  });\n};\n\nfunction DashboardProvider(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentDate = _useState2[0],\n      setCurrentDate = _useState2[1];\n\n  useEffect(function () {\n    var date = new Date().getDate();\n    var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    var monthName = months[new Date().getMonth()];\n    var year = new Date().getFullYear();\n    var hours = new Date().getHours();\n    var min = new Date().getMinutes();\n    var sec = new Date().getSeconds();\n    setCurrentDate(monthName + ' ' + date + ', ' + year);\n  }, []);\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \" \", currentDate, \" \"), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \" Your patient info \"), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \" Provider \"), React.createElement(DropdownProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \" Dose \"), React.createElement(DropdownDose, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    title: \"Generate code\",\n    onPress: function onPress() {\n      return navigation.navigate('GenerateCodeScreen');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    title: \"Logout\",\n    onPress: function onPress() {\n      return navigation.navigate('LoginUser');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default DashboardProvider;","map":{"version":3,"sources":["/Users/hongloc/Documents/GitHub/Covid_pass/screens/Provider/DashboardProvider.js"],"names":["React","Component","useState","useEffect","NavigationContainer","createStackNavigator","RNPickerSelect","DropdownProvider","value","console","log","label","DropdownDose","DashboardProvider","navigation","currentDate","setCurrentDate","date","Date","getDate","months","monthName","getMonth","year","getFullYear","hours","getHours","min","getMinutes","sec","getSeconds","flex","alignItems","justifyContent","navigate"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect} from 'react';\nimport { StyleSheet, Text, View, Button } from 'react-native';\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nimport RNPickerSelect from 'react-native-picker-select';\n\nconst DropdownProvider = () => {\n    return (\n        <RNPickerSelect\n            onValueChange={(value) => console.log(value)}\n            items={[\n                { label: 'Moderna', value: 'Moderna' },\n                { label: 'Pifzer', value: 'Pifzer' },\n            ]}\n        />\n    );\n};\n\nconst DropdownDose = () => {\n    return (\n        <RNPickerSelect\n            onValueChange={(value) => console.log(value)}\n            items={[\n                { label: '1st', value: '1st' },\n                { label: '2nd', value: '2nd' },\n            ]}\n        />\n    );\n};\n\nfunction DashboardProvider({navigation}) {\n    const [currentDate, setCurrentDate] = useState('');\n\n    useEffect(() => {\n        var date = new Date().getDate(); //Current Date\n        var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n        var monthName = months[new Date().getMonth()]; //Current Month\n        var year = new Date().getFullYear(); //Current Year\n        var hours = new Date().getHours(); //Current Hours\n        var min = new Date().getMinutes(); //Current Minutes\n        var sec = new Date().getSeconds(); //Current Seconds\n        \n        setCurrentDate(\n            monthName + ' ' + date + ', ' + year \n        );\n      }, []);\n\n      \n    return (\n        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n            <Text> {currentDate} </Text>\n            <Text> Your patient info </Text>\n            <Text> Provider </Text>\n            <DropdownProvider/>\n            <Text> Dose </Text>\n            <DropdownDose/>\n\n            <Button\n                title=\"Generate code\"\n                onPress={() => navigation.navigate('GenerateCodeScreen')}\n            />\n\n            <Button\n                title=\"Logout\"\n                onPress={() => navigation.navigate('LoginUser')}\n            />\n        </View>\n    );\n}\n\nexport default DashboardProvider;"]},"metadata":{},"sourceType":"module"}