{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/hongloc/Documents/GitHub/Covid_pass/screens/Signup/SignUpUser.js\";\nimport React, { Component, useState, createRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Loader from \"../../CovidPass/Components/Loader\";\n\nfunction SignUpUser(_ref) {\n  var navigation = _ref.navigation,\n      props = _ref.props;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      userName = _useState2[0],\n      setUserName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userEmail = _useState4[0],\n      setUserEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      userAge = _useState6[0],\n      setUserAge = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      userAddress = _useState8[0],\n      setUserAddress = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      userPassword = _useState10[0],\n      setUserPassword = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      loading = _useState12[0],\n      setLoading = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      errortext = _useState14[0],\n      setErrortext = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      isRegistraionSuccess = _useState16[0],\n      setIsRegistraionSuccess = _useState16[1];\n\n  var emailInputRef = createRef();\n  var ageInputRef = createRef();\n  var addressInputRef = createRef();\n  var passwordInputRef = createRef();\n\n  var handleSubmitButton = function handleSubmitButton() {\n    setErrortext('');\n\n    if (!userName) {\n      alert('Please fill Name');\n      return;\n    }\n\n    if (!userEmail) {\n      alert('Please fill Email');\n      return;\n    }\n\n    if (!userAge) {\n      alert('Please fill Age');\n      return;\n    }\n\n    if (!userAddress) {\n      alert('Please fill Address');\n      return;\n    }\n\n    if (!userPassword) {\n      alert('Please fill Password');\n      return;\n    }\n\n    setLoading(true);\n    var dataToSend = {\n      name: userName,\n      email: userEmail,\n      age: userAge,\n      address: userAddress,\n      password: userPassword\n    };\n    var formBody = [];\n\n    for (var key in dataToSend) {\n      var encodedKey = encodeURIComponent(key);\n      var encodedValue = encodeURIComponent(dataToSend[key]);\n      formBody.push(encodedKey + '=' + encodedValue);\n    }\n\n    formBody = formBody.join('&');\n    fetch('http://localhost:3000/api/user/register', {\n      method: 'POST',\n      body: formBody,\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      setLoading(false);\n      console.log(responseJson);\n\n      if (responseJson.status === 'success') {\n        setIsRegistraionSuccess(true);\n        console.log('Registration Successful. Please Login to proceed');\n      } else {\n        setErrortext(responseJson.msg);\n      }\n    }).catch(function (error) {\n      setLoading(false);\n      console.error(error);\n    });\n  };\n\n  if (isRegistraionSuccess) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        backgroundColor: '#307ecc',\n        justifyContent: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, React.createElement(Image, {\n      source: require(\"../../assets/Logo/logo-social.png\"),\n      style: {\n        height: 150,\n        resizeMode: 'contain',\n        alignSelf: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }), React.createElement(Text, {\n      style: styles.successTextStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, \"Registration Successful\"), React.createElement(TouchableOpacity, {\n      style: styles.buttonStyle,\n      activeOpacity: 0.5,\n      onPress: function onPress() {\n        return props.navigation.navigate('LoginScreen');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: styles.buttonTextStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }\n    }, \"Login Now\")));\n  }\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: '#307ecc'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, React.createElement(Loader, {\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }), React.createElement(ScrollView, {\n    keyboardShouldPersistTaps: \"handled\",\n    contentContainerStyle: {\n      justifyContent: 'center',\n      alignContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: {\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/Logo/logo-social.png\"),\n    style: {\n      width: '50%',\n      height: 100,\n      resizeMode: 'contain',\n      margin: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  })), React.createElement(KeyboardAvoidingView, {\n    enabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.SectionStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputStyle,\n    onChangeText: function onChangeText(UserName) {\n      return setUserName(UserName);\n    },\n    underlineColorAndroid: \"#f000\",\n    placeholder: \"Enter Name\",\n    placeholderTextColor: \"#8b9cb5\",\n    autoCapitalize: \"sentences\",\n    returnKeyType: \"next\",\n    onSubmitEditing: function onSubmitEditing() {\n      return emailInputRef.current && emailInputRef.current.focus();\n    },\n    blurOnSubmit: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.SectionStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 15\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputStyle,\n    onChangeText: function onChangeText(UserEmail) {\n      return setUserEmail(UserEmail);\n    },\n    underlineColorAndroid: \"#f000\",\n    placeholder: \"Enter Email\",\n    placeholderTextColor: \"#8b9cb5\",\n    keyboardType: \"email-address\",\n    ref: emailInputRef,\n    returnKeyType: \"next\",\n    onSubmitEditing: function onSubmitEditing() {\n      return passwordInputRef.current && passwordInputRef.current.focus();\n    },\n    blurOnSubmit: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.SectionStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputStyle,\n    onChangeText: function onChangeText(UserPassword) {\n      return setUserPassword(UserPassword);\n    },\n    underlineColorAndroid: \"#f000\",\n    placeholder: \"Enter Password\",\n    placeholderTextColor: \"#8b9cb5\",\n    ref: passwordInputRef,\n    returnKeyType: \"next\",\n    secureTextEntry: true,\n    onSubmitEditing: function onSubmitEditing() {\n      return ageInputRef.current && ageInputRef.current.focus();\n    },\n    blurOnSubmit: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.SectionStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 15\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputStyle,\n    onChangeText: function onChangeText(UserAge) {\n      return setUserAge(UserAge);\n    },\n    underlineColorAndroid: \"#f000\",\n    placeholder: \"Enter Age\",\n    placeholderTextColor: \"#8b9cb5\",\n    keyboardType: \"numeric\",\n    ref: ageInputRef,\n    returnKeyType: \"next\",\n    onSubmitEditing: function onSubmitEditing() {\n      return addressInputRef.current && addressInputRef.current.focus();\n    },\n    blurOnSubmit: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.SectionStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 15\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputStyle,\n    onChangeText: function onChangeText(UserAddress) {\n      return setUserAddress(UserAddress);\n    },\n    underlineColorAndroid: \"#f000\",\n    placeholder: \"Enter Address\",\n    placeholderTextColor: \"#8b9cb5\",\n    autoCapitalize: \"sentences\",\n    ref: addressInputRef,\n    returnKeyType: \"next\",\n    onSubmitEditing: Keyboard.dismiss,\n    blurOnSubmit: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 17\n    }\n  })), errortext != '' ? React.createElement(Text, {\n    style: styles.errorTextStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 17\n    }\n  }, errortext) : null, React.createElement(TouchableOpacity, {\n    style: styles.buttonStyle,\n    activeOpacity: 0.5,\n    onPress: handleSubmitButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonTextStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 17\n    }\n  }, \"REGISTER\")))));\n}\n\n;\nexport default SignUpUser;\nvar styles = StyleSheet.create({\n  SectionStyle: {\n    flexDirection: 'row',\n    height: 40,\n    marginTop: 20,\n    marginLeft: 35,\n    marginRight: 35,\n    margin: 10\n  },\n  buttonStyle: {\n    backgroundColor: '#7DE24E',\n    borderWidth: 0,\n    color: '#FFFFFF',\n    borderColor: '#7DE24E',\n    height: 40,\n    alignItems: 'center',\n    borderRadius: 30,\n    marginLeft: 35,\n    marginRight: 35,\n    marginTop: 20,\n    marginBottom: 20\n  },\n  buttonTextStyle: {\n    color: '#FFFFFF',\n    paddingVertical: 10,\n    fontSize: 16\n  },\n  inputStyle: {\n    flex: 1,\n    color: 'white',\n    paddingLeft: 15,\n    paddingRight: 15,\n    borderWidth: 1,\n    borderRadius: 30,\n    borderColor: '#dadae8'\n  },\n  errorTextStyle: {\n    color: 'red',\n    textAlign: 'center',\n    fontSize: 14\n  },\n  successTextStyle: {\n    color: 'white',\n    textAlign: 'center',\n    fontSize: 18,\n    padding: 30\n  }\n});","map":{"version":3,"sources":["/Users/hongloc/Documents/GitHub/Covid_pass/screens/Signup/SignUpUser.js"],"names":["React","Component","useState","createRef","NavigationContainer","createStackNavigator","Loader","SignUpUser","navigation","props","userName","setUserName","userEmail","setUserEmail","userAge","setUserAge","userAddress","setUserAddress","userPassword","setUserPassword","loading","setLoading","errortext","setErrortext","isRegistraionSuccess","setIsRegistraionSuccess","emailInputRef","ageInputRef","addressInputRef","passwordInputRef","handleSubmitButton","alert","dataToSend","name","email","age","address","password","formBody","key","encodedKey","encodeURIComponent","encodedValue","push","join","fetch","method","body","headers","then","response","json","responseJson","console","log","status","msg","catch","error","flex","backgroundColor","justifyContent","require","height","resizeMode","alignSelf","styles","successTextStyle","buttonStyle","navigate","buttonTextStyle","alignContent","alignItems","width","margin","SectionStyle","inputStyle","UserName","current","focus","UserEmail","UserPassword","UserAge","UserAddress","Keyboard","dismiss","errorTextStyle","StyleSheet","create","flexDirection","marginTop","marginLeft","marginRight","borderWidth","color","borderColor","borderRadius","marginBottom","paddingVertical","fontSize","paddingLeft","paddingRight","textAlign","padding"],"mappings":"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","sourcesContent":["import React, { Component, useState, createRef } from 'react';\nimport { StyleSheet, Text, TextInput, View, Button, Image, KeyboardAvoidingView, Keyboard, TouchableOpacity, ScrollView, } from 'react-native';\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nimport Loader from '../../CovidPass/Components/Loader';\n\n// Screens \n\nfunction SignUpUser({ navigation, props }) {\n    const [userName, setUserName] = useState('');\n    const [userEmail, setUserEmail] = useState('');\n    const [userAge, setUserAge] = useState('');\n    const [userAddress, setUserAddress] = useState('');\n    const [userPassword, setUserPassword] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [errortext, setErrortext] = useState('');\n    const [\n      isRegistraionSuccess,\n      setIsRegistraionSuccess\n    ] = useState(false);\n\n    const emailInputRef = createRef();\n    const ageInputRef = createRef();\n    const addressInputRef = createRef();\n    const passwordInputRef = createRef();\n\n    const handleSubmitButton = () => {\n        setErrortext('');\n        if (!userName) {\n          alert('Please fill Name');\n          return;\n        }\n        if (!userEmail) {\n          alert('Please fill Email');\n          return;\n        }\n        if (!userAge) {\n          alert('Please fill Age');\n          return;\n        }\n        if (!userAddress) {\n          alert('Please fill Address');\n          return;\n        }\n        if (!userPassword) {\n          alert('Please fill Password');\n          return;\n        }\n        //Show Loader\n        setLoading(true);\n        var dataToSend = {\n          name: userName,\n          email: userEmail,\n          age: userAge,\n          address: userAddress,\n          password: userPassword,\n        };\n        var formBody = [];\n        for (var key in dataToSend) {\n          var encodedKey = encodeURIComponent(key);\n          var encodedValue = encodeURIComponent(dataToSend[key]);\n          formBody.push(encodedKey + '=' + encodedValue);\n        }\n        formBody = formBody.join('&');\n    \n        fetch('http://localhost:3000/api/user/register', {\n          method: 'POST',\n          body: formBody,\n          headers: {\n            //Header Defination\n            'Content-Type':\n            'application/x-www-form-urlencoded;charset=UTF-8',\n          },\n        })\n          .then((response) => response.json())\n          .then((responseJson) => {\n            //Hide Loader\n            setLoading(false);\n            console.log(responseJson);\n            // If server response message same as Data Matched\n            if (responseJson.status === 'success') {\n              setIsRegistraionSuccess(true);\n              console.log(\n                'Registration Successful. Please Login to proceed'\n              );\n            } else {\n              setErrortext(responseJson.msg);\n            }\n          })\n          .catch((error) => {\n            //Hide Loader\n            setLoading(false);\n            console.error(error);\n          });\n      };\n      if (isRegistraionSuccess) {\n        return (\n          <View\n            style={{\n              flex: 1,\n              backgroundColor: '#307ecc',\n              justifyContent: 'center',\n            }}>\n            <Image\n              source={require('../../assets/Logo/logo-social.png')}\n              style={{\n                height: 150,\n                resizeMode: 'contain',\n                alignSelf: 'center'\n              }}\n            />\n            <Text style={styles.successTextStyle}>\n              Registration Successful\n            </Text>\n            <TouchableOpacity\n              style={styles.buttonStyle}\n              activeOpacity={0.5}\n              onPress={() => props.navigation.navigate('LoginScreen')}>\n              <Text style={styles.buttonTextStyle}>Login Now</Text>\n            </TouchableOpacity>\n          </View>\n        );\n      }\n\n      return (\n        <View style={{flex: 1, backgroundColor: '#307ecc'}}>\n          <Loader loading={loading} />\n          <ScrollView\n            keyboardShouldPersistTaps=\"handled\"\n            contentContainerStyle={{\n              justifyContent: 'center',\n              alignContent: 'center',\n            }}>\n            <View style={{alignItems: 'center'}}>\n              <Image\n                source={require('../../assets/Logo/logo-social.png')}\n                style={{\n                  width: '50%',\n                  height: 100,\n                  resizeMode: 'contain',\n                  margin: 30,\n                }}\n              />\n            </View>\n            <KeyboardAvoidingView enabled>\n              <View style={styles.SectionStyle}>\n                <TextInput\n                  style={styles.inputStyle}\n                  onChangeText={(UserName) => setUserName(UserName)}\n                  underlineColorAndroid=\"#f000\"\n                  placeholder=\"Enter Name\"\n                  placeholderTextColor=\"#8b9cb5\"\n                  autoCapitalize=\"sentences\"\n                  returnKeyType=\"next\"\n                  onSubmitEditing={() =>\n                    emailInputRef.current && emailInputRef.current.focus()\n                  }\n                  blurOnSubmit={false}\n                />\n              </View>\n              <View style={styles.SectionStyle}>\n                <TextInput\n                  style={styles.inputStyle}\n                  onChangeText={(UserEmail) => setUserEmail(UserEmail)}\n                  underlineColorAndroid=\"#f000\"\n                  placeholder=\"Enter Email\"\n                  placeholderTextColor=\"#8b9cb5\"\n                  keyboardType=\"email-address\"\n                  ref={emailInputRef}\n                  returnKeyType=\"next\"\n                  onSubmitEditing={() =>\n                    passwordInputRef.current &&\n                    passwordInputRef.current.focus()\n                  }\n                  blurOnSubmit={false}\n                />\n              </View>\n              <View style={styles.SectionStyle}>\n                <TextInput\n                  style={styles.inputStyle}\n                  onChangeText={(UserPassword) =>\n                    setUserPassword(UserPassword)\n                  }\n                  underlineColorAndroid=\"#f000\"\n                  placeholder=\"Enter Password\"\n                  placeholderTextColor=\"#8b9cb5\"\n                  ref={passwordInputRef}\n                  returnKeyType=\"next\"\n                  secureTextEntry={true}\n                  onSubmitEditing={() =>\n                    ageInputRef.current &&\n                    ageInputRef.current.focus()\n                  }\n                  blurOnSubmit={false}\n                />\n              </View>\n              <View style={styles.SectionStyle}>\n                <TextInput\n                  style={styles.inputStyle}\n                  onChangeText={(UserAge) => setUserAge(UserAge)}\n                  underlineColorAndroid=\"#f000\"\n                  placeholder=\"Enter Age\"\n                  placeholderTextColor=\"#8b9cb5\"\n                  keyboardType=\"numeric\"\n                  ref={ageInputRef}\n                  returnKeyType=\"next\"\n                  onSubmitEditing={() =>\n                    addressInputRef.current &&\n                    addressInputRef.current.focus()\n                  }\n                  blurOnSubmit={false}\n                />\n              </View>\n              <View style={styles.SectionStyle}>\n                <TextInput\n                  style={styles.inputStyle}\n                  onChangeText={(UserAddress) =>\n                    setUserAddress(UserAddress)\n                  }\n                  underlineColorAndroid=\"#f000\"\n                  placeholder=\"Enter Address\"\n                  placeholderTextColor=\"#8b9cb5\"\n                  autoCapitalize=\"sentences\"\n                  ref={addressInputRef}\n                  returnKeyType=\"next\"\n                  onSubmitEditing={Keyboard.dismiss}\n                  blurOnSubmit={false}\n                />\n              </View>\n              {errortext != '' ? (\n                <Text style={styles.errorTextStyle}>\n                  {errortext}\n                </Text>\n              ) : null}\n              <TouchableOpacity\n                style={styles.buttonStyle}\n                activeOpacity={0.5}\n                onPress={handleSubmitButton}>\n                <Text style={styles.buttonTextStyle}>REGISTER</Text>\n              </TouchableOpacity>\n            </KeyboardAvoidingView>\n          </ScrollView>\n        </View>\n      );\n    };\n    export default SignUpUser;\n    \n    const styles = StyleSheet.create({\n      SectionStyle: {\n        flexDirection: 'row',\n        height: 40,\n        marginTop: 20,\n        marginLeft: 35,\n        marginRight: 35,\n        margin: 10,\n      },\n      buttonStyle: {\n        backgroundColor: '#7DE24E',\n        borderWidth: 0,\n        color: '#FFFFFF',\n        borderColor: '#7DE24E',\n        height: 40,\n        alignItems: 'center',\n        borderRadius: 30,\n        marginLeft: 35,\n        marginRight: 35,\n        marginTop: 20,\n        marginBottom: 20,\n      },\n      buttonTextStyle: {\n        color: '#FFFFFF',\n        paddingVertical: 10,\n        fontSize: 16,\n      },\n      inputStyle: {\n        flex: 1,\n        color: 'white',\n        paddingLeft: 15,\n        paddingRight: 15,\n        borderWidth: 1,\n        borderRadius: 30,\n        borderColor: '#dadae8',\n      },\n      errorTextStyle: {\n        color: 'red',\n        textAlign: 'center',\n        fontSize: 14,\n      },\n      successTextStyle: {\n        color: 'white',\n        textAlign: 'center',\n        fontSize: 18,\n        padding: 30,\n      },\n    });"]},"metadata":{},"sourceType":"module"}